import numpy as np
from flask import Flask, request, jsonify, render_template
import pickle
import os
import pandas as pd
from car_data_prep import prepare_data

# עמודות לצורך המודל
MODEL_COLUMNS = [
    'Hand',
    'capacity_Engine',
    'Km',
    'Car_age',
    'Average_km_per_year',
    'Color_Popularity',
    'Price',
    'manufactor_אאודי',
    'manufactor_אופל',
    'manufactor_אלפא רומיאו',
    'manufactor_ב.מ.וו',
    'manufactor_דייהטסו',
    'manufactor_הונדה',
    'manufactor_וולוו',
    'manufactor_טויוטה',
    'manufactor_יונדאי',
    'manufactor_לקסוס',
    'manufactor_מאזדה',
    'manufactor_מיני',
    'manufactor_מיצובישי',
    'manufactor_מרצדס',
    'manufactor_ניסאן',
    'manufactor_סובארו',
    'manufactor_סוזוקי',
    'manufactor_סיטרואן',
    'manufactor_סקודה',
    'manufactor_פולקסווגן',
    'manufactor_פורד',
    'manufactor_פיגו',
    'manufactor_קיה',
    'manufactor_קרייזלר',
    'manufactor_רנו',
    'manufactor_שברולט',
    'model_ A3',
    'model_ A4',
    'model_ A5',
    'model_ A6',
    'model_ C-CLASS קופה',
    'model_ C-Class',
    'model_ C-Class Taxi',
    'model_ C-Class קופה',
    'model_ CLK',
    'model_ E- CLASS',
    'model_ E-Class',
    'model_ E-Class קופה / קבריולט',
    'model_ Q3',
    'model_ R8',
    'model_ RS5',
    'model_ S-Class',
    'model_ S7',
    'model_ SLK',
    'model_ V- CLASS',
    'model_106',
    'model_108',
    'model_120i',
    'model_2',
    'model_200',
    'model_2008',
    'model_208',
    'model_220',
    'model_3',
    'model_300C',
    'model_301',
    'model_307CC',
    'model_308',
    'model_316',
    'model_318',
    'model_320',
    'model_325',
    'model_5',
    'model_5008',
    'model_508',
    'model_523',
    'model_525',
    'model_530',
    'model_6',
    'model_ACCORD',
    'model_ASX',
    'model_AX',
    'model_B3',
    'model_B4',
    'model_C-HR',
    'model_C1',
    'model_C3',
    'model_C30',
    'model_C4',
    'model_C5',
    'model_CADDY COMBI',
    'model_CIVIC',
    'model_CX',
    'model_DS3',
    'model_FR-V',
    'model_GT3000',
    'model_I-MIEV',
    'model_INSIGHT',
    'model_JAZZ',
    'model_M1',
    'model_ONE',
    'model_RCZ',
    'model_S60',
    'model_S80',
    'model_SVX',
    'model_V40',
    'model_V40 CC',
    'model_X1',
    'model_XCEED',
    'model_XV',
    'model_i10',
    'model_i20',
    'model_i25',
    'model_i30',
    'model_i30CW',
    'model_i35',
    'model_i40',
    'model_one',
    'model_אאודי A1',
    'model_אאודי A3',
    'model_אאודי A4',
    'model_אאודי A5',
    'model_אאודי A6',
    'model_אאודי All Road',
    'model_אאודי Q3',
    'model_אאודי RS5',
    'model_אאודי S3',
    'model_אאודי S5',
    'model_אאודי S7',
    'model_אאוטבק',
    'model_אאוטלנדר',
    'model_אדם',
    'model_אודסיי',
    'model_אוואו',
    'model_אוונסיס',
    'model_אונסיס',
    'model_אוקטביה',
    'model_אוקטביה קומבי',
    'model_אוריס',
    'model_אורלנדו',
    'model_אטראז\'',
    'model_איוניק',
    'model_אימפלה',
    'model_אימפרזה',
    'model_אינסיגניה',
    'model_אינסייט',
    'model_אלנטרה',
    'model_אלפא רומיאו 159',
    'model_אלפא רומיאו ג\'ולייטה',
    'model_אלפא רומיאו מיטו',
    'model_אלפא רומיאו מיטו / MITO',
    'model_אס-מקס',
    'model_אסטרה',
    'model_אפלנדר',
    'model_אקווינוקס',
    'model_אקורד',
    'model_אקליפס',
    'model_ג\'אז',
    'model_ג\'אז הייבריד',
    'model_ג\'טה',
    'model_ג`אז',
    'model_ג`טה',
    'model_גולף',
    'model_גולף GTI',
    'model_גולף פלוס',
    'model_גלאקסי',
    'model_גראנד, וויאג\'ר',
    'model_גרנדיס',
    'model_דייהטסו טריוס',
    'model_דייהטסו סיריון',
    'model_האצ\'בק',
    'model_וויאג\'ר',
    'model_ולוסטר',
    'model_ורסו',
    'model_זאפירה',
    'model_חיפושית',
    'model_חיפושית חדשה',
    'model_טוראן',
    'model_טראקס',
    'model_טרג\'ט',
    'model_טריוס',
    'model_יאריס',
    'model_ייטי',
    'model_לאונה',
    'model_לג\'נד',
    'model_לנסר',
    'model_לנסר הדור החדש',
    'model_לנסר ספורטבק',
    'model_לקסוס CT200H',
    'model_לקסוס GS300',
    'model_לקסוס IS250',
    'model_לקסוס IS300H',
    'model_לקסוס IS300h',
    'model_לקסוס RC',
    'model_מאזדה 2',
    'model_מאזדה 3',
    'model_מאזדה 5',
    'model_מאזדה 6',
    'model_מאליבו',
    'model_מוסטנג',
    'model_מוקה',
    'model_מוקה X',
    'model_מריבה',
    'model_ניסאן אלמרה',
    'model_ניסאן אלתימה',
    'model_ניסאן ג\'וק JUKE',
    'model_ניסאן מיקרה',
    'model_ניסאן מקסימה',
    'model_ניסאן נוט',
    'model_ניסאן סנטרה',
    'model_ניסאן פרימרה',
    'model_ניסאן קווסט',
    'model_נירו',
    'model_נירו EV',
    'model_נירו PHEV',
    'model_סדרה 1',
    'model_סדרה 3',
    'model_סדרה 5',
    'model_סוזוקי SX4',
    'model_סוזוקי SX4 קרוסאובר',
    'model_סוזוקי איגניס',
    'model_סוזוקי אלטו',
    'model_סוזוקי בלנו',
    'model_סוזוקי סדן',
    'model_סוזוקי סוויפט',
    'model_סוזוקי סוויפט החדשה',
    'model_סוזוקי סלריו',
    'model_סוזוקי ספלאש',
    'model_סוזוקי קרוסאובר',
    'model_סול',
    'model_סונטה',
    'model_סוניק',
    'model_סופרב',
    'model_סטוניק',
    'model_סיד',
    'model_סיוויק',
    'model_סיוויק האצ\'בק',
    'model_סיוויק האצ\'בק החדשה',
    'model_סיוויק הייבריד',
    'model_סיוויק סדאן',
    'model_סיוויק סדאן החדשה',
    'model_סיוויק סטיישן',
    'model_סיטיגו / Citygo',
    'model_סיריון',
    'model_סלבריטי',
    'model_ספארק',
    'model_ספיה',
    'model_ספייס',
    'model_ספייס סטאר',
    'model_סקודה אוקטביה (2010)',
    'model_סקודה אוקטביה (2011)',
    'model_סקודה אוקטביה (2012)',
    'model_סקודה אוקטביה (2013)',
    'model_סקודה אוקטביה (2014)',
    'model_סקודה אוקטביה (2015)',
    'model_סקודה אוקטביה (2016)',
    'model_סקודה אוקטביה RS (2014)',
    'model_סקודה אוקטביה ספייס (2015)',
    'model_סקודה אוקטביה ספייס (2016)',
    'model_סקודה ייטי (2012)',
    'model_סקודה סופרב (2011)',
    'model_סקודה סופרב (2012)',
    'model_סקודה סופרב (2013)',
    'model_סקודה סופרב (2014)',
    'model_סקודה סופרב (2015)',
    'model_סקודה סופרב (2016)',
    'model_סקודה פאביה (2011)',
    'model_סקודה פאביה (2012)',
    'model_סקודה פאביה (2013)',
    'model_סקודה פאביה (2014)',
    'model_סקודה פאביה (2015)',
    'model_סקודה פאביה (2016)',
    'model_סקודה פאביה ספייס (2016)',
    'model_סקודה ראפיד (2013)',
    'model_סקודה ראפיד (2014)',
    'model_סקודה ראפיד (2015)',
    'model_סקודה רומסטר (2013)',
    'model_סקודה רומסטר (2014)',
    'model_סקודה רומסטר (2015)',
    'model_סקודה רומסטר (2012)',
    'model_סראטו',
    'model_פאביה',
    'model_פאביה ספייס',
    'model_פאסאט',
    'model_פאסאט CC',
    'model_פולו',
    'model_פוקוס',
    'model_פורטה',
    'model_פיאסטה',
    'model_פיקנטו',
    'model_פריוס',
    'model_פרייד',
    'model_קאונטרימן',
    'model_קאמרי',
    'model_קאנטרימן',
    'model_קונקט',
    'model_קופה',
    'model_קופר',
    'model_קורבט',
    'model_קורולה',
    'model_קורסה',
    'model_קורסה החדשה',
    'model_קורסיקה',
    'model_קרוז',
    'model_קרוז החדשה',
    'model_קרניבל',
    'model_ראפיד',
    'model_ראפיד ספייסבק',
    'model_ריו',
    'model_רנו 25',
    'model_רנו גרנד סניק',
    'model_רנו מגאן אסטייט / גראנד טור',
    'model_רנו פלואנס',
    'model_רנו פלואנס חשמלי',
    'model_רנו קליאו',
    'model_רנו קליאו אסטייט',
    'model_רנו קליאו דור 4',
    'model_רנו קפצ`ור',
    'model_שירוקו',
    'model_שרמנט',
    'Gear_אוטומטית',
    'Gear_טיפטרוניק',
    'Gear_ידנית',
    'Gear_לא מוגדר',
    'Gear_רובוטית',
    'Engine_type_בנזין',
    'Engine_type_גז',
    'Engine_type_דיזל',
    'Engine_type_היבריד',
    'Engine_type_היברידי',
    'Engine_type_חשמלי',
    'Engine_type_טורבו דיזל',
    'Curr_ownership_Unknown',
    'Curr_ownership_אחר',
    'Curr_ownership_השכרה',
    'Curr_ownership_חברה',
    'Curr_ownership_לא מוגדר',
    'Curr_ownership_ליסינג',
    'Curr_ownership_פרטית',
    'Color_Unknown',
    'Color_אדום',
    'Color_אדום מטאלי',
    'Color_אפור',
    'Color_אפור מטאלי',
    'Color_אפור עכבר',
    'Color_בורדו',
    'Color_בז\'',
    'Color_בז\' מטאלי',
    'Color_ברונזה',
    'Color_ורוד',
    'Color_זהב',
    'Color_זהב מטאלי',
    'Color_חום',
    'Color_חום מטאלי',
    'Color_טורקיז',
    'Color_ירוק',
    'Color_ירוק בהיר',
    'Color_ירוק מטאלי',
    'Color_כחול',
    'Color_כחול בהיר',
    'Color_כחול בהיר מטאלי',
    'Color_כחול כהה',
    'Color_כחול כהה מטאלי',
    'Color_כחול מטאלי',
    'Color_כסוף',
    'Color_כסוף מטאלי',
    'Color_כסף מטלי',
    'Color_כתום',
    'Color_לבן',
    'Color_לבן מטאלי',
    'Color_לבן פנינה',
    'Color_לבן שנהב',
    'Color_סגול',
    'Color_סגול חציל',
    'Color_שחור',
    'Color_שמפניה',
    'Color_תכלת',
    'Color_תכלת מטאלי'
]


app = Flask(__name__)
model = pickle.load(open('trained_model.pkl', 'rb'))


@app.route('/')
def home():
    return render_template('index.html')


@app.route('/predict', methods=['POST'])
def predict():
    features = request.form.getlist('feature')

    # הכנה של מילון לערכים לפי העמודות המקוריות
    features_dic = {col: features[i] if i < len(features) else None for i, col in enumerate(model_columns)}

    # המרה של סוגי נתונים רלוונטיים
    for key in ['Year', 'Hand', 'Pic_num']:
        if isinstance(features_dic[key], str) and features_dic[key].isdigit():
            features_dic[key] = int(features_dic[key])

    for key in ['Cre_date', 'Repub_date', 'Test']:
        if isinstance(features_dic[key], str):
            features_dic[key] = features_dic[key].split('-')
            real_date = f"{features_dic[key][2]}/{features_dic[key][1]}/{features_dic[key][0]}"
            features_dic[key] = real_date

    # הכנה של נתוני הבדיקה והכנתם למודל
    df = pd.DataFrame([features_dic])
    prepared_features = prepare_data(df)

    # השלמת עמודות חסרות
    for col in model_columns:
        if col not in prepared_features.columns:
            prepared_features[col] = 0

    # תחזית המחיר
    prediction = model.predict(prepared_features)[0]

    output_text = f"The prediction for the price is: {round(prediction, 2)}"
    return render_template('index.html', prediction_text=output_text)


if __name__ == "__main__":
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port, debug=True)
